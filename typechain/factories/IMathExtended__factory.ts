/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IMathExtended, IMathExtendedInterface } from "../IMathExtended";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value2",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "addBulk",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value2",
        type: "uint256",
      },
    ],
    name: "getGcd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "isPrime",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value3",
        type: "uint256",
      },
    ],
    name: "mulDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value2",
        type: "uint256",
      },
    ],
    name: "swapAwesome",
    outputs: [
      {
        internalType: "uint256",
        name: "_val1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_val2",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IMathExtended__factory {
  static readonly abi = _abi;
  static createInterface(): IMathExtendedInterface {
    return new utils.Interface(_abi) as IMathExtendedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMathExtended {
    return new Contract(address, _abi, signerOrProvider) as IMathExtended;
  }
}
